function stepfinal() {
    jQuery("#p_body_content").fadeOut("slow");
    jQuery("#p_loading").fadeIn("slow");
}

function goToUrlFinish() {
    stepfinal();
    PreventExitPop = false;
    document.getElementById("p_form_post").submit();
}

function scrollTo(a) {
    if ($("#" + a).length) {
        var c = $("#" + a).offset();
        var b = c.top;
        $("html,body").animate({ scrollTop: b }, { duration: "slow" });
    }
}

function getBrowser() {
    if ((navigator.userAgent.indexOf("Opera") || navigator.userAgent.indexOf("OPR")) != -1) { return "Opera"; } else {
        if (navigator.userAgent.indexOf("Chrome") != -1) {
            return "Google Chrome";
        } else {
            if (navigator.userAgent.indexOf("Safari") != -1) { return "Safari"; } else {
                if (navigator.userAgent.indexOf("Firefox") != -1) { return "Firefox"; } else {
                    if ((navigator.userAgent.indexOf("MSIE") != -1) || (!!document.documentMode == true)) {
                        return "IE";
                    } else { return "Unknown"; }
                }
            }
        }
    }
    return "Unknown";
}

function getPlatform() {
    if (window.navigator.userAgent.indexOf("Windows NT 10.0") != -1) { return "Windows 10"; }
    if (window.navigator.userAgent.indexOf("Windows NT 6.2") != -1) {
        return "Windows 8";
    }
    if (window.navigator.userAgent.indexOf("Windows NT 6.1") != -1) { return "Windows 7"; }
    if (window.navigator.userAgent.indexOf("Windows NT 6.0") != -1) {
        return "Windows Vista";
    }
    if (window.navigator.userAgent.indexOf("Windows NT 5.1") != -1) { return "Windows XP"; }
    if (window.navigator.userAgent.indexOf("Windows NT 5.0") != -1) {
        return "Windows 2000";
    }
    if (window.navigator.userAgent.indexOf("iPhone") != -1) { return "iPhone"; }
    if (window.navigator.userAgent.indexOf("iPad") != -1) { return "iPad"; }
    if (window.navigator.userAgent.indexOf("Android") != -1) {
        return "Android";
    }
    if (window.navigator.userAgent.indexOf("Mac") != -1) { return "Macintosh"; }
    if (window.navigator.userAgent.indexOf("X11") != -1) { return "UNIX"; }
    if (window.navigator.userAgent.indexOf("Linux") != -1) {
        return "Linux";
    }
    if (window.navigator.userAgent.indexOf("BlackBerry") != -1) { return "BlackBerry"; }
    return "Unknown";
}
jQuery(document).ready(function () {
    // function d(h) {
    //     var j, k, i = h,
    //         g = setInterval(function() {
    //             j = parseInt(i / 60, 10), k = parseInt(i % 60, 10), k = 10 > k ? "0" + k : k, $("#timerr").text(j + " " + minutos_y + k + " " + segundos), --i < 0 && (clearInterval(g));
    //         }, 1000);
    // }
    // if (jQuery("#timerr").length >= 1) { d((1 * 60) + 29); }

    function f(g) {
    if (g < 10) {
        g = "0" + g;
    }
    return g;
}

var b = new Date();
var b2 = new Date();
b2.setDate(b2.getDate() + 2); // Add 2 days

// Format the time in "HH:MM" format
var a = f(b.getHours()) + ":" + f(b.getMinutes());

// English day and month names
const dayNames = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
const monthNames = ["January", "February", "March", "April", "May", "June", 
                    "July", "August", "September", "October", "November", "December"];

// Assign the current date, time, and names to HTML elements
jQuery(".p_var-dia").text(b.getDate());
jQuery(".p_var-mes").text(b.getMonth() + 1); // Months are zero-based, so add 1
jQuery(".p_var-anyo").text(b.getFullYear());
jQuery(".p_var-dia_nombre").text(dayNames[b.getDay()]);
jQuery(".p_var-mes_nombre").text(monthNames[b.getMonth()]);
jQuery(".p_var-hora_fija").text(a);

// For the date two days ahead
jQuery(".p_var-dia-next2").text(b2.getDate());
jQuery(".p_var-mes_nombre-next2").text(monthNames[b2.getMonth()]);

// Check for browser and platform
if (jQuery(".p_var-browser").length >= 1) {
    var c = getBrowser();
    jQuery(".p_var-browser").text(c);
}
if (jQuery(".p_var-so").length >= 1) {
    var e = getPlatform();
    jQuery(".p_var-so").text(e);
}

});